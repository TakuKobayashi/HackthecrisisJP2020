on:
  push:
    branches:
      - master

name: Serverless Deploy
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: setup ubuntu
      run: sudo apt-get --quiet update --yes
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Register .env
      working-directory: ./serverless
      env:
        LINE_NOTIFY_CLIENT_ID: ${{ secrets.LINE_NOTIFY_CLIENT_ID }}
        LINE_NOTIFY_CLIENT_SECRET: ${{ secrets.LINE_NOTIFY_CLIENT_SECRET }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        LINE_NOTIFY_REDIRECT_URL: ${{ secrets.LINE_NOTIFY_REDIRECT_URL }}
      run: |
        echo "LINE_NOTIFY_CLIENT_ID=${LINE_NOTIFY_CLIENT_ID}" >> ./.env
        echo "LINE_NOTIFY_CLIENT_SECRET=${LINE_NOTIFY_CLIENT_SECRET}" >> ./.env
        echo "FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}" >> ./.env
        echo "LINE_NOTIFY_REDIRECT_URL=${LINE_NOTIFY_REDIRECT_URL}" >> ./.env
    - name: Register firebaseConfig.json
      working-directory: ./serverless
      env:
        FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
      run: |
        echo "${FIREBASE_CONFIG}" >> ./firebaseConfig.json
    - name: yarn install
      working-directory: ./serverless
      run: yarn install
    - name: serverless package and deploy
      working-directory: ./serverless
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        yarn run serverless package --stage production --package ./build
        yarn run serverless config credentials --provider aws --key ${AWS_ACCESS_KEY_ID} --secret ${AWS_SECRET_ACCESS_KEY}
        yarn run serverless deploy --stage production --package ./build
    - uses: actions/upload-artifact@master
      with:
        name: build
        path: serverless/build